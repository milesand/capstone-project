upstream django {
    server unix:///socket/capstone.sock;
}

server {
    listen 80;
    server_name localhost; #여기에 도메인 명이나 ip주소 입력
    charset UTF-8;
    client_max_body_size 5G;
    root /;

    access_log testlog.log;

    location /{
        root /React/build; #리액트 테스트
        index index.html;
        try_files $uri $uri/ /;
    }

    location ~ /.*/static/(.*){
        return 301 /static/$1;
    }

    location ~ /static/(admin|rest_framework){ # django admin 관리 페이지 및 api 페이지를 위한 css 및 js 링크
        try_files $uri $uri/ =404;
    }

    location ~ /static { # 정적 파일들이 모여있는 폴더 경로.
        alias /React/build/; #이 경로에서부터 location에 지정된 /static으로 시작하는 url을 찾아간다.
        try_files $uri $uri/ =404;
    }

    location ~ /media { # 각 사용자가 저장한 파일들이 모여있는 폴더 경로.
        #internal; # 사용자가 직접 해당 경로를 통해 파일을 다운로드 받는 것을 방지한다.
        #alias /media/; # nignx 컨테이너에서 / 이하의 경로를 참조한다.
        add_header Content-Disposition "attachment; filename=$request_filename";
        try_files $uri $uri/ =404;
    }

    location ~ /file/complete/(.*) { # 업로드 파일 및 썸네일 경로
        #internal;
        return 301 /media/files/$1;
    }

    location @404{
        return 200 "error!!!";
    }

    location ~ /(admin|api) {
            uwsgi_pass django; # 여기서의 django는 위에서 정의한 upstream의 이름이다.
            include uwsgi_params;
    }
}