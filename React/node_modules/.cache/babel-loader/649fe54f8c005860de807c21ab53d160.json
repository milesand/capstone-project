{"ast":null,"code":"import _classCallCheck from \"C:\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\frontend\\\\src\\\\components\\\\auth\\\\GoogleLoginButton.js\";\nimport React from 'react';\n\nvar GoogleLoginButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleLoginButton, _React$Component);\n\n  function GoogleLoginButton(props) {\n    var _this;\n\n    _classCallCheck(this, GoogleLoginButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GoogleLoginButton).call(this, props));\n\n    _this.toggleLoggedIn = function () {\n      return _this.setState(function (state) {\n        return {\n          isLoggedIn: !state.isLoggedIn\n        };\n      });\n    };\n\n    _this.onSignIn = function (googleUser) {\n      _this.props.onSignIn(googleUser);\n    };\n\n    _this.renderGoogleLoginButton = function () {\n      // console.log('rendering google signin button');\n      window.gapi.signin2.render('my-signin2', {\n        scope: 'profile email',\n        width: 200,\n        height: 40,\n        longtitle: false,\n        theme: 'dark',\n        onsuccess: _this.onSignIn // onsuccess: this.props.onSignIn,\n\n      });\n    };\n\n    _this.logout = function () {\n      console.log('logout');\n      var auth2 = window.gapi && window.gapi.auth2.getAuthInstance();\n\n      if (auth2) {\n        auth2.signOut().then(function () {\n          _this.toggleLoggedIn();\n\n          console.log('Logged out successfully');\n        }).catch(function (err) {\n          console.log('Error while logging out', err);\n        });\n      } else {\n        console.log('error while logging out');\n      }\n    };\n\n    _this.state = {\n      isLoggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(GoogleLoginButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('google-loaded', this.renderGoogleLoginButton);\n      window.gapi && this.renderGoogleLoginButton();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"my-signin2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), this.state.isLoggedIn && React.createElement(\"button\", {\n        style: {\n          width: 200,\n          height: 40,\n          textAlign: 'center'\n        },\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Logout\"));\n    }\n  }]);\n\n  return GoogleLoginButton;\n}(React.Component);\n\nexport default GoogleLoginButton;","map":{"version":3,"sources":["C:\\frontend\\src\\components\\auth\\GoogleLoginButton.js"],"names":["React","GoogleLoginButton","props","toggleLoggedIn","setState","state","isLoggedIn","onSignIn","googleUser","renderGoogleLoginButton","window","gapi","signin2","render","scope","width","height","longtitle","theme","onsuccess","logout","console","log","auth2","getAuthInstance","signOut","then","catch","err","addEventListener","textAlign","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;;AADiB,UAOnBC,cAPmB,GAOF;AAAA,aAAM,MAAKC,QAAL,CAAc,UAAAC,KAAK,EAAI;AAC5C,eAAO;AAAEC,UAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AAArB,SAAP;AACD,OAFsB,CAAN;AAAA,KAPE;;AAAA,UAWnBC,QAXmB,GAWR,UAAAC,UAAU,EAAI;AAEvB,YAAKN,KAAL,CAAWK,QAAX,CAAoBC,UAApB;AAED,KAfkB;;AAAA,UAiBnBC,uBAjBmB,GAiBO,YAAM;AAC9B;AAEAC,MAAAA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBC,MAApB,CAA2B,YAA3B,EAAyC;AACvCC,QAAAA,KAAK,EAAE,eADgC;AAEvCC,QAAAA,KAAK,EAAE,GAFgC;AAGvCC,QAAAA,MAAM,EAAE,EAH+B;AAIvCC,QAAAA,SAAS,EAAE,KAJ4B;AAKvCC,QAAAA,KAAK,EAAE,MALgC;AAMvCC,QAAAA,SAAS,EAAE,MAAKZ,QANuB,CAOvC;;AAPuC,OAAzC;AASD,KA7BkB;;AAAA,UA+BnBa,MA/BmB,GA+BV,YAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,UAAIC,KAAK,GAAGb,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBC,eAAlB,EAA3B;;AACA,UAAID,KAAJ,EAAW;AACTA,QAAAA,KAAK,CACFE,OADH,GAEGC,IAFH,CAEQ,YAAM;AACV,gBAAKvB,cAAL;;AACAkB,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,SALH,EAMGK,KANH,CAMS,UAAAC,GAAG,EAAI;AACZP,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCM,GAAvC;AACD,SARH;AASD,OAVD,MAUO;AACLP,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;AACF,KAhDkB;;AAEjB,UAAKjB,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAFiB;AAKlB;;;;wCA6CmB;AAClBI,MAAAA,MAAM,CAACmB,gBAAP,CAAwB,eAAxB,EAAyC,KAAKpB,uBAA9C;AACAC,MAAAA,MAAM,CAACC,IAAP,IAAe,KAAKF,uBAAL,EAAf;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKJ,KAAL,CAAWC,UAAX,IACC;AAAQ,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE,EAAtB;AAA0Bc,UAAAA,SAAS,EAAE;AAArC,SAAf;AAA+D,QAAA,OAAO,EAAE,KAAKV,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADF;AAUD;;;;EAnE6BpB,KAAK,CAAC+B,S;;AAsEtC,eAAe9B,iBAAf","sourcesContent":["import React from 'react';\n\nclass GoogleLoginButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  toggleLoggedIn = () => this.setState(state => {\n    return { isLoggedIn: !state.isLoggedIn };\n  });\n\n  onSignIn = googleUser => {\n   \n    this.props.onSignIn(googleUser);\n\n  };\n\n  renderGoogleLoginButton = () => {   \n    // console.log('rendering google signin button');\n    \n    window.gapi.signin2.render('my-signin2', {\n      scope: 'profile email',\n      width: 200,\n      height: 40,\n      longtitle: false,\n      theme: 'dark',\n      onsuccess: this.onSignIn,\n      // onsuccess: this.props.onSignIn,\n    });\n  };\n\n  logout = () => {\n    console.log('logout');\n\n    let auth2 = window.gapi && window.gapi.auth2.getAuthInstance();\n    if (auth2) {\n      auth2\n        .signOut()\n        .then(() => {\n          this.toggleLoggedIn();\n          console.log('Logged out successfully');\n        })\n        .catch(err => {\n          console.log('Error while logging out', err);\n        });\n    } else {\n      console.log('error while logging out');\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener('google-loaded', this.renderGoogleLoginButton);\n    window.gapi && this.renderGoogleLoginButton();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"my-signin2\"></div>\n        {this.state.isLoggedIn && (\n          <button style={{ width: 200, height: 40, textAlign: 'center'}} onClick={this.logout}>\n            Logout\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default GoogleLoginButton;\n"]},"metadata":{},"sourceType":"module"}