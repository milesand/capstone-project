{"ast":null,"code":"import _defineProperty from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hong/PRTest/capstone-project/React/src/containers/Login.js\";\nimport React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\"; //로그인\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    console.log(\"로그인 시작.\");\n    return _this;\n  } //유저 로그인 상태 체크\n\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.isLogin) {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"validateField\",\n    value: function validateField(username, password) {\n      return username && username.length > 0 && password && password.length > 0;\n    }\n  }, {\n    key: \"valChangeControl\",\n    value: function valChangeControl(e) {\n      var target_id = e.target.id;\n      var target_val = e.target.value;\n      console.log(\"changeControl!\");\n      this.setState(_defineProperty({}, target_id, target_val));\n      console.log(\"CC test.\");\n      console.log(this.state.username);\n      console.log(this.state.password);\n    } //구글 로그인 구현하기\n    // 일반 로그인\n\n  }, {\n    key: \"normalLogin\",\n    value: function normalLogin(e) {\n      e.preventDefault();\n      var data = {\n        username: this.state.username,\n        email: this.state.email\n      };\n\n      var errorCheck = function errorCheck(response) {};\n\n      console.log(JSON.stringify(data));\n      fetch(\"http://localhost/api/jwt-login\", {\n        method: \"POST\",\n        header: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      }).then(function (res) {\n        return res.json();\n      }).then(function (contents) {\n        console.log(contents);\n      }).catch(function (error) {\n        return console.log('로그인 에러!');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('login render.');\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        username: this.state.username,\n        password: this.state.password,\n        changeUsername: function changeUsername(e) {\n          return _this2.valChangeControl(e);\n        },\n        changePassword: function changePassword(e) {\n          return _this2.valChangeControl(e);\n        },\n        normalLogin: function normalLogin(e) {\n          return _this2.normalLogin(e);\n        },\n        validate: this.validateForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/home/hong/PRTest/capstone-project/React/src/containers/Login.js"],"names":["React","Component","Fragment","LoginForm","Login","props","state","username","password","console","log","isLogin","history","push","length","e","target_id","target","id","target_val","value","setState","preventDefault","data","email","errorCheck","response","JSON","stringify","fetch","method","header","body","credentials","then","res","json","contents","catch","error","valChangeControl","normalLogin","validateForm"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\";\n\n//로그인\nexport default class Login extends Component { //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    console.log(\"로그인 시작.\");\n  }\n\n  //유저 로그인 상태 체크\n  componentDidMount() {\n    if (this.props.isLogin) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  validateField(username, password) {\n    return (username&&username.length>0&&password&&password.length>0);\n  }\n\n  valChangeControl(e){\n    let target_id=e.target.id;\n    let target_val=e.target.value;\n    console.log(\"changeControl!\");\n    this.setState({\n      [target_id]: target_val\n    });\n    console.log(\"CC test.\");\n    console.log(this.state.username);\n    console.log(this.state.password);\n  }\n\n  //구글 로그인 구현하기\n\n\n  // 일반 로그인\n  normalLogin(e) {\n    e.preventDefault();\n\n    let data={\n      username: this.state.username,\n      email: this.state.email\n    }\n\n    let errorCheck = response => {\n      \n    }\n    console.log(JSON.stringify(data));\n    fetch(\"http://localhost/api/jwt-login\", {\n      method: \"POST\",\n      header: {\n        'Content-Type' : 'application/json',\n      },\n      body: JSON.stringify(data),\n      credentials: 'include' \n    })\n    .then(res=>res.json())\n    .then(contents => {\n      console.log(contents);\n    }).catch(error=>console.log('로그인 에러!'));\n  }\n\n  render() {\n    console.log('login render.');\n    return (\n      <Fragment>\n        <LoginForm\n            username={this.state.username}\n            password={this.state.password}\n            changeUsername={e => this.valChangeControl(e)}\n            changePassword={e => this.valChangeControl(e)}\n            normalLogin={e => this.normalLogin(e)}\n            validate={this.validateForm}\n        />\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}