{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungs\\\\Deact\\\\frontend\\\\frontend\\\\src\\\\containers\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport SignupForm from \"../components/auth/SignupForm\"; // 구글 계정으로 로그인하지 않는 경우 회원 생성 로직을 수행하는 컴포넌트\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isAuthenticated) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  validateForm(username, password) {\n    return username && username.length > 0 && password && password.length > 0;\n  }\n\n  async handleSubmit(submitEvent) {\n    let data = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    submitEvent.preventDefault();\n\n    let handleErrors = response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response;\n    };\n\n    fetch('http://localhost:8000/user/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(handleErrors).then(res => res.json()).then(json => {\n      if (json.username && json.token) {\n        this.props.userHasAuthenticated(true, json.username, json.token);\n        this.props.history.push(\"/\");\n      }\n    }).catch(error => alert(error));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SignupForm, {\n      username: this.state.username,\n      password: this.state.password,\n      handleChangeUsername: e => this.handleChange(e),\n      handleChangePassword: e => this.handleChange(e),\n      handleSubmit: e => this.handleSubmit(e),\n      validate: this.validateForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sungs/Deact/frontend/frontend/src/containers/Signup.js"],"names":["React","Component","SignupForm","Signup","constructor","props","handleChange","event","setState","target","id","value","state","username","password","componentDidMount","isAuthenticated","history","push","validateForm","length","handleSubmit","submitEvent","data","preventDefault","handleErrors","response","ok","Error","statusText","fetch","method","headers","body","JSON","stringify","then","res","json","token","userHasAuthenticated","catch","error","alert","render","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,+BAAvB,C,CAEA;;AACA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,YAnBmB,GAmBJC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AADpB,OAAd;AAGD,KAvBkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKV,KAAL,CAAWW,eAAf,EAAgC;AAC9B,WAAKX,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;;AAEDC,EAAAA,YAAY,CAACN,QAAD,EAAWC,QAAX,EAAqB;AAC/B,WAAQD,QAAQ,IAAIA,QAAQ,CAACO,MAAT,GAAkB,CAA/B,IAAsCN,QAAQ,IAAIA,QAAQ,CAACM,MAAT,GAAkB,CAA3E;AACD;;AAQD,QAAMC,YAAN,CAAmBC,WAAnB,EAAgC;AAC9B,QAAIC,IAAI,GAAG;AACTV,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADZ;AAETC,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFZ,KAAX;AAKAQ,IAAAA,WAAW,CAACE,cAAZ;;AAEA,QAAIC,YAAY,GAAGC,QAAQ,IAAI;AAC7B,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACD,aAAOH,QAAP;AACD,KALD;;AAOAI,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF0B;AAKnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAL6B,KAAhC,CAAL,CAOCa,IAPD,CAOMX,YAPN,EAQCW,IARD,CAQMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARb,EASCF,IATD,CASME,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACzB,QAAL,IAAiByB,IAAI,CAACC,KAA1B,EAAiC;AAC/B,aAAKlC,KAAL,CAAWmC,oBAAX,CAAgC,IAAhC,EAAsCF,IAAI,CAACzB,QAA3C,EAAqDyB,IAAI,CAACC,KAA1D;AACA,aAAKlC,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF,KAdD,EAeCuB,KAfD,CAeOC,KAAK,IAAIC,KAAK,CAACD,KAAD,CAfrB;AAgBD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWC,QADvB;AAEE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAFvB;AAGE,MAAA,oBAAoB,EAAE+B,CAAC,IAAI,KAAKvC,YAAL,CAAkBuC,CAAlB,CAH7B;AAIE,MAAA,oBAAoB,EAAEA,CAAC,IAAI,KAAKvC,YAAL,CAAkBuC,CAAlB,CAJ7B;AAKE,MAAA,YAAY,EAAEA,CAAC,IAAI,KAAKxB,YAAL,CAAkBwB,CAAlB,CALrB;AAME,MAAA,QAAQ,EAAE,KAAK1B,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAtE2C","sourcesContent":["import React, { Component } from \"react\";\nimport SignupForm from \"../components/auth/SignupForm\";\n\n// 구글 계정으로 로그인하지 않는 경우 회원 생성 로직을 수행하는 컴포넌트\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isAuthenticated) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  validateForm(username, password) {\n    return (username && username.length > 0) && (password && password.length > 0);\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  async handleSubmit(submitEvent) {\n    let data = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    submitEvent.preventDefault();\n\n    let handleErrors = response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    }\n\n    fetch('http://localhost:8000/user/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    .then(handleErrors)\n    .then(res => res.json())\n    .then(json => {\n      if (json.username && json.token) {\n        this.props.userHasAuthenticated(true, json.username, json.token);\n        this.props.history.push(\"/\");\n      }\n    })\n    .catch(error => alert(error));\n  }\n\n  render() {\n    return (\n      <SignupForm\n        username={this.state.username}\n        password={this.state.password}\n        handleChangeUsername={e => this.handleChange(e)}\n        handleChangePassword={e => this.handleChange(e)}\n        handleSubmit={e => this.handleSubmit(e)}\n        validate={this.validateForm}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}