{"ast":null,"code":"import _classCallCheck from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hong/PRTest/capstone-project/React/src/containers/MailValidation.js\";\nimport React, { Component } from 'react';\nimport MailValidationForm from \"../components/auth/MailValidationForm\";\nimport { withRouter } from 'react-router-dom';\n\nvar MailValidation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MailValidation, _Component);\n\n  function MailValidation(props) {\n    var _this;\n\n    _classCallCheck(this, MailValidation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MailValidation).call(this, props));\n    _this.state = {\n      guideText: \"\",\n      isValid: true\n    };\n    _this.toHome = _this.toHome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.props.userHasAuthenticated();\n\n    return _this;\n  }\n\n  _createClass(MailValidation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"href test.\");\n      console.log(document.location.href.split(\"mail-validation/\"));\n      var url = 'http://localhost/api/activate/' + document.location.href.split(\"mail-validation/\")[1];\n      var isErr = false;\n\n      var handleErrors = function handleErrors(response) {\n        if (!response.ok) {\n          _this2.setState({\n            guideText: \"만료된 링크입니다.\",\n            isValid: false\n          });\n\n          isErr = true;\n        }\n\n        return response;\n      };\n\n      fetch(url, {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(handleErrors).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n\n        if (!isErr) {\n          _this2.setState({\n            guideText: \"메일 인증이 완료되었습니다. 사이트 이름(추후에 수정)의 기능을 즐겨보세요!\"\n          });\n        }\n      });\n    }\n  }, {\n    key: \"toHome\",\n    value: function toHome() {\n      console.log(\"toHome.\");\n      console.log(this);\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MailValidationForm, {\n        toHome: this.toHome,\n        guideText: this.state.guideText,\n        isValid: this.state.isValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MailValidation;\n}(Component);\n\nexport default withRouter(MailValidation);","map":{"version":3,"sources":["/home/hong/PRTest/capstone-project/React/src/containers/MailValidation.js"],"names":["React","Component","MailValidationForm","withRouter","MailValidation","props","state","guideText","isValid","toHome","bind","userHasAuthenticated","console","log","document","location","href","split","url","isErr","handleErrors","response","ok","setState","fetch","method","headers","then","res","json","history","push"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;IAEMC,c;;;;;AAEF,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,SAAS,EAAE,EADJ;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAX;AAKA,UAAKC,MAAL,GAAY,MAAKA,MAAL,CAAYC,IAAZ,uDAAZ;;AACA,UAAKL,KAAL,CAAWM,oBAAX;;AARc;AASjB;;;;wCAEkB;AAAA;;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6B,kBAA7B,CAAZ;AACA,UAAIC,GAAG,GAAC,mCAAmCJ,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6B,kBAA7B,EAAiD,CAAjD,CAA3C;AACA,UAAIE,KAAK,GAAC,KAAV;;AACA,UAAIC,YAAY,GAAG,SAAfA,YAAe,CAAAC,QAAQ,EAAI;AAC3B,YAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;AACZ,UAAA,MAAI,CAACC,QAAL,CAAc;AACVhB,YAAAA,SAAS,EAAE,YADD;AAEVC,YAAAA,OAAO,EAAE;AAFC,WAAd;;AAIAW,UAAAA,KAAK,GAAC,IAAN;AACH;;AACD,eAAOE,QAAP;AACH,OATD;;AAUAG,MAAAA,KAAK,CAACN,GAAD,EAAM;AACPO,QAAAA,MAAM,EAAE,KADD;AAEPC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAFF,OAAN,CAAL,CAMCC,IAND,CAMMP,YANN,EAOCO,IAPD,CAOM,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,OAPT,EAQCF,IARD,CAQM,UAAAE,IAAI,EAAE;AACRjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;;AACA,YAAG,CAACV,KAAJ,EAAU;AACN,UAAA,MAAI,CAACI,QAAL,CAAc;AACVhB,YAAAA,SAAS,EAAE;AADD,WAAd;AAGH;AACJ,OAfD;AAgBH;;;6BAEO;AACJK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WAAKR,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;;;6BAEO;AACJ,aACI,oBAAC,kBAAD;AACI,QAAA,MAAM,EAAE,KAAKtB,MADjB;AAEI,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,SAF1B;AAGI,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH;;;;EA5DwBP,S;;AA+D7B,eAAeE,UAAU,CAACC,cAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport MailValidationForm from \"../components/auth/MailValidationForm\"\nimport { withRouter } from 'react-router-dom';\n\nclass MailValidation extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            guideText: \"\",\n            isValid: true,\n        }\n\n        this.toHome=this.toHome.bind(this);\n        this.props.userHasAuthenticated();\n    }\n\n    componentDidMount(){\n        console.log(\"href test.\");\n        console.log(document.location.href.split(\"mail-validation/\"));\n        let url='http://localhost/api/activate/' + document.location.href.split(\"mail-validation/\")[1];\n        let isErr=false;\n        let handleErrors = response => {\n            if(!response.ok){\n                this.setState({\n                    guideText: \"만료된 링크입니다.\",\n                    isValid: false\n                });\n                isErr=true;\n            }\n            return response;\n        }\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n        .then(handleErrors)\n        .then(res=>res.json())\n        .then(json=>{\n            console.log(json);\n            if(!isErr){\n                this.setState({\n                    guideText: \"메일 인증이 완료되었습니다. 사이트 이름(추후에 수정)의 기능을 즐겨보세요!\",\n                });\n            }\n        });\n    }\n\n    toHome(){\n        console.log(\"toHome.\");\n        console.log(this);\n        this.props.history.push('/');\n    }\n\n    render(){\n        return(\n            <MailValidationForm\n                toHome={this.toHome}\n                guideText={this.state.guideText}\n                isValid={this.state.isValid}\n            />\n        )\n    }\n}\n\nexport default withRouter(MailValidation);"]},"metadata":{},"sourceType":"module"}