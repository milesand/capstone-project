{"ast":null,"code":"import _defineProperty from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hong/PRTest/capstone-project/React/src/containers/Login.js\";\nimport React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\"; //로그인\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.facebookLogin = function (response) {\n      console.log(\"facebook profile : \", response);\n      var data = {\n        access_token: response.accessToken,\n        social_auth: \"facebook\"\n      };\n\n      var errorCheck = function errorCheck(response) {\n        console.log(data);\n        return response;\n      };\n\n      fetch(\"http://localhost/api/social-login\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return res.json();\n      }).then(errorCheck).then(function (content) {\n        console.log('facebook content : ', content);\n\n        _this.props.userStateChange(true, true, content.username, content.nickname, content.email);\n\n        _this.props.history.push('/');\n      }).catch(function (e) {\n        return alert(e);\n      });\n    };\n\n    console.log('login props : ', props);\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      isLoading: false\n    };\n    console.log(\"로그인 시작.\");\n    return _this;\n  } //유저 로그인 상태 체크\n\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.isLogin) {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"valChangeControl\",\n    value: function valChangeControl(e) {\n      var target_id = e.target.id;\n      var target_val = e.target.value;\n      this.setState(_defineProperty({}, target_id, target_val));\n      console.log('change!');\n      console.log(target_id, \" : \", target_val);\n    }\n  }, {\n    key: \"validateAllField\",\n    value: function validateAllField(username, password) {\n      console.log('username : ', username, ' password : ', password);\n      var val = true;\n      var idPasswordTest = /^.*(?=^.{8,15}$)(?=.*\\d)(?=.*[a-zA-Z]).*$/;\n      if (!username || !idPasswordTest.test(username)) val = false;\n      if (!password || !idPasswordTest.test(password)) val = false;\n      console.log(\"validate val : \", val);\n      return val;\n    } //구글 로그인 구현하기\n\n  }, {\n    key: \"googleLogin\",\n    value: function googleLogin() {\n      var _this2 = this;\n\n      var auth2 = window.gapi.auth2.getAuthInstance();\n      Promise.resolve(auth2.signIn()).then(function (googleUser) {\n        console.log(\"googleUser : \", googleUser);\n        console.log(\"near login : \", _this2.props);\n        console.log(\"google login called!!!!!\", _this2.props.username);\n        var token = googleUser.getAuthResponse(true).access_token;\n        console.log(\"token : \", token);\n        var data = {\n          access_token: token,\n          social_auth: \"google\"\n        };\n\n        var errorCheck = function errorCheck(response) {\n          if (response.hasOwnProperty('error')) {\n            throw Error(response['error']);\n          }\n\n          return response;\n        };\n\n        console.log(\"here, props : \", _this2.props);\n\n        if (token != null) {\n          fetch(\"http://localhost/api/social-login\", {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify(data)\n          }).then(function (res) {\n            return res.json();\n          }).then(errorCheck).then(function (content) {\n            _this2.props.userStateChange(true, true, content.username, content.nickname, content.email);\n\n            _this2.props.history.push('/');\n          }).catch(function (e) {\n            return alert(e);\n          });\n        }\n      });\n    } //페이스북 로그인\n\n  }, {\n    key: \"normalLogin\",\n    // 일반 로그인\n    value: function normalLogin(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var isMailAuthenticated = true;\n      var data = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      this.props.toggleLoadingState();\n      console.log(\"isLoading : \", this.state.isLoading);\n      fetch(\"http://localhost/api/jwt-login\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (content) {\n        // 아이디와 비밀번호가 올바른지 확인하고, 맞으면 이메일 인증 여부 확인\n        if (content.hasOwnProperty('error')) {\n          if (content.hasOwnProperty('email')) {\n            isMailAuthenticated = false;\n          } else throw Error(content['error']);\n        }\n\n        console.log(\"content ? \", content);\n\n        _this3.props.userStateChange(true, isMailAuthenticated, _this3.state.username, content.nickname, content.email);\n\n        console.log(\"joigwegjoiwegwgweg\");\n\n        _this3.setState({\n          isLoading: true\n        });\n\n        _this3.props.toggleLoadingState();\n\n        _this3.props.history.push('/');\n      }).catch(function (error) {\n        alert(error);\n\n        _this3.props.toggleLoadingState();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        username: this.state.username,\n        password: this.state.password,\n        isLoading: this.props.isLoading,\n        isLogin: this.isLogin,\n        changeUsername: function changeUsername(e) {\n          return _this4.valChangeControl(e);\n        },\n        changePassword: function changePassword(e) {\n          return _this4.valChangeControl(e);\n        },\n        normalLogin: function normalLogin(e) {\n          return _this4.normalLogin(e);\n        },\n        googleLogin: function googleLogin(e) {\n          return _this4.googleLogin(e);\n        },\n        facebookLogin: function facebookLogin(e) {\n          return _this4.facebookLogin(e);\n        },\n        validate: this.validateAllField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/home/hong/PRTest/capstone-project/React/src/containers/Login.js"],"names":["React","Component","Fragment","LoginForm","Login","props","facebookLogin","response","console","log","data","access_token","accessToken","social_auth","errorCheck","fetch","method","headers","credentials","body","JSON","stringify","then","res","json","content","userStateChange","username","nickname","email","history","push","catch","e","alert","state","password","isLoading","isLogin","target_id","target","id","target_val","value","setState","val","idPasswordTest","test","auth2","window","gapi","getAuthInstance","Promise","resolve","signIn","googleUser","token","getAuthResponse","hasOwnProperty","Error","preventDefault","isMailAuthenticated","toggleLoadingState","error","valChangeControl","normalLogin","googleLogin","validateAllField"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yCAAtB,C,CAEA;;IACqBC,K;;;;;AAA0B;AAC7C,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAiFnBC,aAjFmB,GAiFH,UAACC,QAAD,EAAc;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,QAAnC;AACA,UAAIG,IAAI,GAAC;AACPC,QAAAA,YAAY,EAAEJ,QAAQ,CAACK,WADhB;AAEPC,QAAAA,WAAW,EAAE;AAFN,OAAT;;AAKA,UAAIC,UAAU,GAAG,SAAbA,UAAa,CAACP,QAAD,EAAa;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,eAAOH,QAAP;AACD,OAHD;;AAKAQ,MAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACP,0BAAiB;AADV,SAFgC;AAKzCC,QAAAA,WAAW,EAAE,SAL4B;AAMzCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AANmC,OAAtC,CAAL,CAQCY,IARD,CAQM,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,OART,EASCF,IATD,CASMR,UATN,EAUCQ,IAVD,CAUM,UAAAG,OAAO,EAAI;AACfjB,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCgB,OAAnC;;AACA,cAAKpB,KAAL,CAAWqB,eAAX,CAA2B,IAA3B,EAAiC,IAAjC,EAAuCD,OAAO,CAACE,QAA/C,EAAyDF,OAAO,CAACG,QAAjE,EAA2EH,OAAO,CAACI,KAAnF;;AACA,cAAKxB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OAdD,EAcGC,KAdH,CAcS,UAAAC,CAAC;AAAA,eAAEC,KAAK,CAACD,CAAD,CAAP;AAAA,OAdV;AAeD,KA5GkB;;AAEjBzB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,KAA9B;AACA,UAAK8B,KAAL,GAAa;AACXR,MAAAA,QAAQ,EAAE,EADC;AAEXS,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKA7B,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AARiB;AASlB,G,CAED;;;;;wCACoB;AAClB,UAAI,KAAKJ,KAAL,CAAWiC,OAAf,EAAwB;AACtB,aAAKjC,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;;;qCAEgBE,C,EAAE;AACjB,UAAIM,SAAS,GAACN,CAAC,CAACO,MAAF,CAASC,EAAvB;AACA,UAAIC,UAAU,GAACT,CAAC,CAACO,MAAF,CAASG,KAAxB;AACA,WAAKC,QAAL,qBACGL,SADH,EACeG,UADf;AAGAlC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY8B,SAAZ,EAAuB,KAAvB,EAA8BG,UAA9B;AACD;;;qCAEgBf,Q,EAAUS,Q,EAAS;AACjC5B,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkB,QAA3B,EAAqC,cAArC,EAAqDS,QAArD;AACA,UAAIS,GAAG,GAAC,IAAR;AACA,UAAMC,cAAc,GAAC,2CAArB;AACA,UAAG,CAACnB,QAAD,IAAW,CAACmB,cAAc,CAACC,IAAf,CAAoBpB,QAApB,CAAf,EAA8CkB,GAAG,GAAC,KAAJ;AAC9C,UAAG,CAACT,QAAD,IAAW,CAACU,cAAc,CAACC,IAAf,CAAoBX,QAApB,CAAf,EAA8CS,GAAG,GAAC,KAAJ;AAC9CrC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BoC,GAA/B;AACA,aAAOA,GAAP;AACF,K,CACD;;;;kCAEa;AAAA;;AACX,UAAIG,KAAK,GAACC,MAAM,CAACC,IAAP,CAAYF,KAAZ,CAAkBG,eAAlB,EAAV;AACAC,MAAAA,OAAO,CAACC,OAAR,CAAgBL,KAAK,CAACM,MAAN,EAAhB,EACChC,IADD,CACM,UAAAiC,UAAU,EAAI;AAClB/C,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B8C,UAA7B;AACA/C,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,MAAI,CAACJ,KAAlC;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,MAAI,CAACJ,KAAL,CAAWsB,QAAnD;AACA,YAAI6B,KAAK,GAACD,UAAU,CAACE,eAAX,CAA2B,IAA3B,EAAiC9C,YAA3C;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB+C,KAAxB;AAEA,YAAI9C,IAAI,GAAC;AACPC,UAAAA,YAAY,EAAE6C,KADP;AAEP3C,UAAAA,WAAW,EAAE;AAFN,SAAT;;AAKA,YAAIC,UAAU,GAAE,SAAZA,UAAY,CAAAP,QAAQ,EAAG;AACzB,cAAGA,QAAQ,CAACmD,cAAT,CAAwB,OAAxB,CAAH,EAAoC;AAClC,kBAAMC,KAAK,CAACpD,QAAQ,CAAC,OAAD,CAAT,CAAX;AACD;;AACD,iBAAOA,QAAP;AACD,SALD;;AAMAC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,MAAI,CAACJ,KAAnC;;AACA,YAAGmD,KAAK,IAAE,IAAV,EAAe;AACbzC,UAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,YAAAA,MAAM,EAAE,MADiC;AAEzCC,YAAAA,OAAO,EAAE;AACP,8BAAiB;AADV,aAFgC;AAKzCC,YAAAA,WAAW,EAAE,SAL4B;AAMzCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AANmC,WAAtC,CAAL,CAQCY,IARD,CAQM,UAAAC,GAAG;AAAA,mBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,WART,EASCF,IATD,CASMR,UATN,EAUCQ,IAVD,CAUM,UAAAG,OAAO,EAAI;AACf,YAAA,MAAI,CAACpB,KAAL,CAAWqB,eAAX,CAA2B,IAA3B,EAAiC,IAAjC,EAAuCD,OAAO,CAACE,QAA/C,EAAyDF,OAAO,CAACG,QAAjE,EAA2EH,OAAO,CAACI,KAAnF;;AACA,YAAA,MAAI,CAACxB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,WAbD,EAaGC,KAbH,CAaS,UAAAC,CAAC;AAAA,mBAAEC,KAAK,CAACD,CAAD,CAAP;AAAA,WAbV;AAcD;AACF,OApCD;AAqCD,K,CAED;;;;AA8BA;gCACYA,C,EAAG;AAAA;;AACbA,MAAAA,CAAC,CAAC2B,cAAF;AACA,UAAIC,mBAAmB,GAAC,IAAxB;AACA,UAAInD,IAAI,GAAC;AACPiB,QAAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWR,QADd;AAEPS,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFd,OAAT;AAKA,WAAK/B,KAAL,CAAWyD,kBAAX;AACAtD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAK0B,KAAL,CAAWE,SAAvC;AACAtB,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAiB;AADV,SAF6B;AAKtCC,QAAAA,WAAW,EAAE,SALyB;AAMtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AANgC,OAAnC,CAAL,CAQCY,IARD,CAQM,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,OART,EASCF,IATD,CASM,UAAAG,OAAO,EAAI;AACf;AACA,YAAGA,OAAO,CAACiC,cAAR,CAAuB,OAAvB,CAAH,EAAmC;AACjC,cAAGjC,OAAO,CAACiC,cAAR,CAAuB,OAAvB,CAAH,EAAmC;AAChCG,YAAAA,mBAAmB,GAAC,KAApB;AACF,WAFD,MAIG,MAAMF,KAAK,CAAClC,OAAO,CAAC,OAAD,CAAR,CAAX;AACJ;;AAEDjB,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BgB,OAA1B;;AACA,QAAA,MAAI,CAACpB,KAAL,CAAWqB,eAAX,CAA2B,IAA3B,EAAiCmC,mBAAjC,EAAsD,MAAI,CAAC1B,KAAL,CAAWR,QAAjE,EAA2EF,OAAO,CAACG,QAAnF,EAA6FH,OAAO,CAACI,KAArG;;AACArB,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,QAAA,MAAI,CAACmC,QAAL,CAAc;AACZP,UAAAA,SAAS,EAAE;AADC,SAAd;;AAGA,QAAA,MAAI,CAAChC,KAAL,CAAWyD,kBAAX;;AACA,QAAA,MAAI,CAACzD,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OA3BD,EA2BGC,KA3BH,CA2BS,UAAA+B,KAAK,EAAE;AACV7B,QAAAA,KAAK,CAAC6B,KAAD,CAAL;;AACA,QAAA,MAAI,CAAC1D,KAAL,CAAWyD,kBAAX;AACL,OA9BD;AA+BD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,SAAD;AACI,QAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAWR,QADzB;AAEI,QAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWC,QAFzB;AAGI,QAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWgC,SAH1B;AAII,QAAA,OAAO,EAAE,KAAKC,OAJlB;AAKI,QAAA,cAAc,EAAE,wBAAAL,CAAC;AAAA,iBAAI,MAAI,CAAC+B,gBAAL,CAAsB/B,CAAtB,CAAJ;AAAA,SALrB;AAMI,QAAA,cAAc,EAAE,wBAAAA,CAAC;AAAA,iBAAI,MAAI,CAAC+B,gBAAL,CAAsB/B,CAAtB,CAAJ;AAAA,SANrB;AAOI,QAAA,WAAW,EAAE,qBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACgC,WAAL,CAAiBhC,CAAjB,CAAJ;AAAA,SAPlB;AAQI,QAAA,WAAW,EAAE,qBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACiC,WAAL,CAAiBjC,CAAjB,CAAJ;AAAA,SARlB;AASI,QAAA,aAAa,EAAE,uBAAAA,CAAC;AAAA,iBAAI,MAAI,CAAC3B,aAAL,CAAmB2B,CAAnB,CAAJ;AAAA,SATpB;AAUI,QAAA,QAAQ,EAAE,KAAKkC,gBAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,CADF;AAgBD;;;;EA5KgClE,S;;SAAdG,K","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\";\n\n//로그인\nexport default class Login extends Component { //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  constructor(props) {\n    super(props);\n    console.log('login props : ', props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isLoading: false\n    };\n    console.log(\"로그인 시작.\");\n  }\n\n  //유저 로그인 상태 체크\n  componentDidMount() {\n    if (this.props.isLogin) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  valChangeControl(e){\n    let target_id=e.target.id;\n    let target_val=e.target.value;\n    this.setState({\n      [target_id]: target_val\n    });\n    console.log('change!');\n    console.log(target_id, \" : \", target_val);\n  }\n\n  validateAllField(username, password){\n     console.log('username : ', username, ' password : ', password);\n     let val=true;\n     const idPasswordTest=/^.*(?=^.{8,15}$)(?=.*\\d)(?=.*[a-zA-Z]).*$/;\n     if(!username||!idPasswordTest.test(username)) val=false;\n     if(!password||!idPasswordTest.test(password)) val=false;\n     console.log(\"validate val : \", val);\n     return val;\n  }\n  //구글 로그인 구현하기\n\n  googleLogin(){\n    let auth2=window.gapi.auth2.getAuthInstance();\n    Promise.resolve(auth2.signIn())\n    .then(googleUser => {\n      console.log(\"googleUser : \", googleUser);\n      console.log(\"near login : \", this.props);\n      console.log(\"google login called!!!!!\", this.props.username);\n      let token=googleUser.getAuthResponse(true).access_token;\n      console.log(\"token : \", token);\n\n      let data={\n        access_token: token,\n        social_auth: \"google\"\n      }\n\n      let errorCheck= response =>{\n        if(response.hasOwnProperty('error')){\n          throw Error(response['error'])\n        }\n        return response;\n      }\n      console.log(\"here, props : \", this.props);\n      if(token!=null){\n        fetch(\"http://localhost/api/social-login\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type' : 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify(data)\n        })\n        .then(res=>res.json())\n        .then(errorCheck)\n        .then(content => {\n          this.props.userStateChange(true, true, content.username, content.nickname, content.email);\n          this.props.history.push('/');\n        }).catch(e=>alert(e))\n      }\n    })\n  }\n\n  //페이스북 로그인\n  facebookLogin = (response) => {\n    console.log(\"facebook profile : \", response);\n    let data={\n      access_token: response.accessToken,\n      social_auth: \"facebook\"\n    }\n\n    let errorCheck = (response) =>{\n      console.log(data);\n      return response;\n    }\n\n    fetch(\"http://localhost/api/social-login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify(data)\n    })\n    .then(res=>res.json())\n    .then(errorCheck)\n    .then(content => {\n      console.log('facebook content : ', content);\n      this.props.userStateChange(true, true, content.username, content.nickname, content.email);\n      this.props.history.push('/');\n    }).catch(e=>alert(e))\n  }\n\n  // 일반 로그인\n  normalLogin(e) {\n    e.preventDefault();\n    let isMailAuthenticated=true;\n    let data={\n      username: this.state.username,\n      password: this.state.password\n    }\n    \n    this.props.toggleLoadingState();\n    console.log(\"isLoading : \", this.state.isLoading);\n    fetch(\"http://localhost/api/jwt-login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify(data)\n    })\n    .then(res=>res.json())\n    .then(content => {\n      // 아이디와 비밀번호가 올바른지 확인하고, 맞으면 이메일 인증 여부 확인\n      if(content.hasOwnProperty('error')){\n        if(content.hasOwnProperty('email')){\n           isMailAuthenticated=false;\n        }\n        else\n           throw Error(content['error']);\n      }\n\n      console.log(\"content ? \", content);\n      this.props.userStateChange(true, isMailAuthenticated, this.state.username, content.nickname, content.email);\n      console.log(\"joigwegjoiwegwgweg\");\n      this.setState({\n        isLoading: true\n      });\n      this.props.toggleLoadingState();\n      this.props.history.push('/');\n    }).catch(error=>{\n          alert(error);\n          this.props.toggleLoadingState();\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n            <LoginForm\n                username={this.state.username}\n                password={this.state.password}\n                isLoading={this.props.isLoading}\n                isLogin={this.isLogin}\n                changeUsername={e => this.valChangeControl(e)}\n                changePassword={e => this.valChangeControl(e)}\n                normalLogin={e => this.normalLogin(e)}\n                googleLogin={e => this.googleLogin(e)}\n                facebookLogin={e => this.facebookLogin(e)}\n                validate={this.validateAllField}\n            />\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}