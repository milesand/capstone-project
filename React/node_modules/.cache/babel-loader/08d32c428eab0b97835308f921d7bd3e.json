{"ast":null,"code":"import _defineProperty from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hong/PRTest/capstone-project/React/src/containers/Login.js\";\nimport React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\";\nimport GoogleLoginButton from \"../components/LoginComponents/GoogleLoginButton\"; //로그인\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.toggleLoginState = function () {\n      return _this.setState(function (state) {\n        return {\n          isLogin: !state.isLogin\n        };\n      });\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      isLogin: false\n    };\n    console.log(\"로그인 시작.\");\n    return _this;\n  } //유저 로그인 상태 체크\n\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.isLogin) {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"valChangeControl\",\n    value: function valChangeControl(e) {\n      var target_id = e.target.id;\n      var target_val = e.target.value;\n      console.log(\"changeControl!\");\n      this.setState(_defineProperty({}, target_id, target_val));\n    }\n  }, {\n    key: \"googleLogin\",\n    //구글 로그인 구현하기\n    value: function googleLogin(googleUser) {\n      var _this2 = this;\n\n      console.log(\"google login called!!!!!\");\n      this.toggleLoginState();\n\n      if (!this.state.isLogin) {\n        var token = googleUser.getAuthResponse().access_token;\n        console.log(token);\n        var data = {\n          access_token: token,\n          social_auth: \"google\"\n        };\n\n        var errorCheck = function errorCheck(response) {\n          if (response.hasOwnProperty('error')) {\n            throw Error(response['error']);\n          }\n\n          return response;\n        };\n\n        fetch(\"http://localhost/api/google\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify(data)\n        }).then(function (res) {\n          return res.json();\n        }).then(errorCheck).then(function (content) {\n          _this2.props.userStateChange(true, true, content.username, content.email);\n\n          _this2.props.history.push('/');\n        }).catch(function (e) {\n          return alert(e);\n        });\n      }\n    }\n    /*socialLogin(user, social){\n      console.log(\"social login called!!!!\");\n      let url=null;\n      let token=null;\n      let data={\n        access_token: token,\n        social_auth: social\n      }\n       if(social=='google'){\n        url=\"http://localhost/api/google\";\n        token=user.getAuthResponse().access_token;\n        this.googleLogin(user, data, url);\n      }\n       else if(social=='facebook'){\n        //여기에 페이스북 인증 넣기\n      }\n    }\n     googleLogin(googleUser, data, url){\n      console.log(\"google login called!!!!!\");  \n      console.log(data.token);\n       fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type' : 'application/json',\n        },\n        body: JSON.stringify(data)\n      })  \n      .then(res=>res.json())\n      .then(content => {\n        console.log(content);\n      })\n    }*/\n    // 일반 로그인\n\n  }, {\n    key: \"normalLogin\",\n    value: function normalLogin(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var isMailAuthenticated = true;\n      var data = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      fetch(\"http://localhost/api/jwt-login\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (content) {\n        // 아이디와 비밀번호가 올바른지 확인하고, 맞으면 이메일 인증 여부 확인\n        if (content.hasOwnProperty('error')) {\n          if (content.hasOwnProperty('email')) {\n            isMailAuthenticated = false;\n          } else throw Error(content['error']);\n        }\n\n        console.log(\"content ? \", content);\n\n        _this3.props.userStateChange(true, isMailAuthenticated, _this3.state.username, content.email);\n\n        _this3.props.history.push('/');\n      }).catch(function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log('login render.');\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        username: this.state.username,\n        password: this.state.password,\n        isLogin: this.isLogin,\n        changeUsername: function changeUsername(e) {\n          return _this4.valChangeControl(e);\n        },\n        changePassword: function changePassword(e) {\n          return _this4.valChangeControl(e);\n        },\n        normalLogin: function normalLogin(e) {\n          return _this4.normalLogin(e);\n        },\n        googleLogin: function googleLogin(e) {\n          return _this4.googleLogin(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/home/hong/PRTest/capstone-project/React/src/containers/Login.js"],"names":["React","Component","Fragment","LoginForm","GoogleLoginButton","Login","props","toggleLoginState","setState","state","isLogin","username","password","console","log","history","push","e","target_id","target","id","target_val","value","googleUser","token","getAuthResponse","access_token","data","social_auth","errorCheck","response","hasOwnProperty","Error","fetch","method","headers","credentials","body","JSON","stringify","then","res","json","content","userStateChange","email","catch","alert","preventDefault","isMailAuthenticated","error","valChangeControl","normalLogin","googleLogin"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAOC,iBAAP,MAA8B,iDAA9B,C,CACA;;IACqBC,K;;;;;AAA0B;AAC7C,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UA0BnBC,gBA1BmB,GA0BA;AAAA,aACf,MAAKC,QAAL,CAAc,UAAAC,KAAK,EAAI;AACvB,eAAO;AAAEC,UAAAA,OAAO,EAAE,CAACD,KAAK,CAACC;AAAlB,SAAP;AACH,OAFG,CADe;AAAA,KA1BA;;AAEjB,UAAKD,KAAL,GAAa;AACXE,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXF,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAPiB;AAQlB,G,CAED;;;;;wCACoB;AAClB,UAAI,KAAKR,KAAL,CAAWI,OAAf,EAAwB;AACtB,aAAKJ,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;;;qCAEgBC,C,EAAE;AACjB,UAAIC,SAAS,GAACD,CAAC,CAACE,MAAF,CAASC,EAAvB;AACA,UAAIC,UAAU,GAACJ,CAAC,CAACE,MAAF,CAASG,KAAxB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAKN,QAAL,qBACGU,SADH,EACeG,UADf;AAGD;;;AAOD;gCACYE,U,EAAW;AAAA;;AACrBV,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,WAAKP,gBAAL;;AACA,UAAG,CAAC,KAAKE,KAAL,CAAWC,OAAf,EAAuB;AACrB,YAAIc,KAAK,GAACD,UAAU,CAACE,eAAX,GAA6BC,YAAvC;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AAEA,YAAIG,IAAI,GAAC;AACPD,UAAAA,YAAY,EAAEF,KADP;AAEPI,UAAAA,WAAW,EAAE;AAFN,SAAT;;AAKA,YAAIC,UAAU,GAAE,SAAZA,UAAY,CAAAC,QAAQ,EAAG;AACzB,cAAGA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAH,EAAoC;AAClC,kBAAMC,KAAK,CAACF,QAAQ,CAAC,OAAD,CAAT,CAAX;AACD;;AACD,iBAAOA,QAAP;AACD,SALD;;AAMAG,QAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,UAAAA,MAAM,EAAE,MAD2B;AAEnCC,UAAAA,OAAO,EAAE;AACP,4BAAiB;AADV,WAF0B;AAKnCC,UAAAA,WAAW,EAAE,SALsB;AAMnCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAN6B,SAAhC,CAAL,CAQCa,IARD,CAQM,UAAAC,GAAG;AAAA,iBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,SART,EASCF,IATD,CASMX,UATN,EAUCW,IAVD,CAUM,UAAAG,OAAO,EAAI;AACf,UAAA,MAAI,CAACrC,KAAL,CAAWsC,eAAX,CAA2B,IAA3B,EAAiC,IAAjC,EAAuCD,OAAO,CAAChC,QAA/C,EAAyDgC,OAAO,CAACE,KAAjE;;AACA,UAAA,MAAI,CAACvC,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,SAbD,EAaG8B,KAbH,CAaS,UAAA7B,CAAC;AAAA,iBAAE8B,KAAK,CAAC9B,CAAD,CAAP;AAAA,SAbV;AAcD;AACF;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;;;gCACYA,C,EAAG;AAAA;;AACbA,MAAAA,CAAC,CAAC+B,cAAF;AAEA,UAAIC,mBAAmB,GAAC,IAAxB;AACA,UAAItB,IAAI,GAAC;AACPhB,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QADd;AAEPC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG;AAFd,OAAT;AAKAqB,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAiB;AADV,SAF6B;AAKtCC,QAAAA,WAAW,EAAE,SALyB;AAMtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AANgC,OAAnC,CAAL,CAQCa,IARD,CAQM,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,OART,EASCF,IATD,CASM,UAAAG,OAAO,EAAI;AACf;AACA,YAAGA,OAAO,CAACZ,cAAR,CAAuB,OAAvB,CAAH,EAAmC;AACjC,cAAGY,OAAO,CAACZ,cAAR,CAAuB,OAAvB,CAAH,EAAmC;AAChCkB,YAAAA,mBAAmB,GAAC,KAApB;AACF,WAFD,MAIG,MAAMjB,KAAK,CAACW,OAAO,CAAC,OAAD,CAAR,CAAX;AACJ;;AAED9B,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B6B,OAA1B;;AACA,QAAA,MAAI,CAACrC,KAAL,CAAWsC,eAAX,CAA2B,IAA3B,EAAiCK,mBAAjC,EAAsD,MAAI,CAACxC,KAAL,CAAWE,QAAjE,EAA2EgC,OAAO,CAACE,KAAnF;;AACA,QAAA,MAAI,CAACvC,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OAtBD,EAsBG8B,KAtBH,CAsBS,UAAAI,KAAK;AAAA,eAAEH,KAAK,CAACG,KAAD,CAAP;AAAA,OAtBd;AAuBD;;;6BAEQ;AAAA;;AACPrC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACI,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWE,QADzB;AAEI,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAFzB;AAGI,QAAA,OAAO,EAAE,KAAKF,OAHlB;AAII,QAAA,cAAc,EAAE,wBAAAO,CAAC;AAAA,iBAAI,MAAI,CAACkC,gBAAL,CAAsBlC,CAAtB,CAAJ;AAAA,SAJrB;AAKI,QAAA,cAAc,EAAE,wBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACkC,gBAAL,CAAsBlC,CAAtB,CAAJ;AAAA,SALrB;AAMI,QAAA,WAAW,EAAE,qBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACmC,WAAL,CAAiBnC,CAAjB,CAAJ;AAAA,SANlB;AAOI,QAAA,WAAW,EAAE,qBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACoC,WAAL,CAAiBpC,CAAjB,CAAJ;AAAA,SAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAaD;;;;EA1JgChB,S;;SAAdI,K","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\";\nimport GoogleLoginButton from \"../components/LoginComponents/GoogleLoginButton\";\n//로그인\nexport default class Login extends Component { //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isLogin: false\n    };\n    console.log(\"로그인 시작.\");\n  }\n\n  //유저 로그인 상태 체크\n  componentDidMount() {\n    if (this.props.isLogin) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  valChangeControl(e){\n    let target_id=e.target.id;\n    let target_val=e.target.value;\n    console.log(\"changeControl!\");\n    this.setState({\n      [target_id]: target_val\n    });\n  }\n\n  toggleLoginState = () =>\n      this.setState(state => {\n      return { isLogin: !state.isLogin };\n  });\n\n  //구글 로그인 구현하기\n  googleLogin(googleUser){\n    console.log(\"google login called!!!!!\");\n    this.toggleLoginState();\n    if(!this.state.isLogin){\n      let token=googleUser.getAuthResponse().access_token;\n      console.log(token);\n\n      let data={\n        access_token: token,\n        social_auth: \"google\"\n      }\n\n      let errorCheck= response =>{\n        if(response.hasOwnProperty('error')){\n          throw Error(response['error'])\n        }\n        return response;\n      }\n      fetch(\"http://localhost/api/google\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type' : 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n      .then(res=>res.json())\n      .then(errorCheck)\n      .then(content => {\n        this.props.userStateChange(true, true, content.username, content.email);\n        this.props.history.push('/');\n      }).catch(e=>alert(e))\n    }\n  }\n\n  /*socialLogin(user, social){\n    console.log(\"social login called!!!!\");\n    let url=null;\n    let token=null;\n    let data={\n      access_token: token,\n      social_auth: social\n    }\n\n    if(social=='google'){\n      url=\"http://localhost/api/google\";\n      token=user.getAuthResponse().access_token;\n      this.googleLogin(user, data, url);\n    }\n\n    else if(social=='facebook'){\n      //여기에 페이스북 인증 넣기\n    }\n  }\n\n  googleLogin(googleUser, data, url){\n    console.log(\"google login called!!!!!\");  \n    console.log(data.token);\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n      body: JSON.stringify(data)\n    })  \n    .then(res=>res.json())\n    .then(content => {\n      console.log(content);\n    })\n  }*/\n  // 일반 로그인\n  normalLogin(e) {\n    e.preventDefault();\n\n    let isMailAuthenticated=true;\n    let data={\n      username: this.state.username,\n      password: this.state.password\n    }\n\n    fetch(\"http://localhost/api/jwt-login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify(data)\n    })\n    .then(res=>res.json())\n    .then(content => {\n      // 아이디와 비밀번호가 올바른지 확인하고, 맞으면 이메일 인증 여부 확인\n      if(content.hasOwnProperty('error')){\n        if(content.hasOwnProperty('email')){\n           isMailAuthenticated=false;\n        }\n        else\n           throw Error(content['error']);\n      }\n\n      console.log(\"content ? \", content);\n      this.props.userStateChange(true, isMailAuthenticated, this.state.username, content.email);\n      this.props.history.push('/');\n    }).catch(error=>alert(error));\n  }\n\n  render() {\n    console.log('login render.');\n    return (\n      <Fragment>\n        <LoginForm\n            username={this.state.username}\n            password={this.state.password}\n            isLogin={this.isLogin}\n            changeUsername={e => this.valChangeControl(e)}\n            changePassword={e => this.valChangeControl(e)}\n            normalLogin={e => this.normalLogin(e)}\n            googleLogin={e => this.googleLogin(e)}\n        />\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}