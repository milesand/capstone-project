{"ast":null,"code":"import _defineProperty from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hong/PRTest/capstone-project/React/src/containers/Login.js\";\nimport React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\";\nimport GoogleLogin from 'react-google-login';\nimport { gapi } from 'gapi-script'; //로그인\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.responseGoogle = function (response) {\n      console.log(\"sdijgoew\");\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    console.log(\"로그인 시작.\");\n    return _this;\n  } //유저 로그인 상태 체크\n\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.gapi.load('auth2', function () {\n        _this2.auth2 = gapi.auth2.init({\n          client_id: '34311588244-1m2ifu48kbs1pf9e9orb1513h8fs40bt.apps.googleusercontent.com'\n        });\n        window.gapi.load('signin2', function () {\n          // render a sign in button\n          // using this method will show Signed In if the user is already signed in\n          var opts = {\n            width: 200,\n            height: 50,\n            onSuccess: this.onSuccess.bind(this)\n          };\n          gapi.signin2.render('loginButton', opts);\n        });\n      });\n\n      if (this.props.isLogin) {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"valChangeControl\",\n    value: function valChangeControl(e) {\n      var target_id = e.target.id;\n      var target_val = e.target.value;\n      console.log(\"changeControl!\");\n      this.setState(_defineProperty({}, target_id, target_val));\n    } //구글 로그인 구현하기\n\n  }, {\n    key: \"googleLogin\",\n    value: function googleLogin(e) {\n      this.props.history.push('/signup');\n    } // 일반 로그인\n\n  }, {\n    key: \"normalLogin\",\n    value: function normalLogin(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var isMailAuthenticated = true;\n      var data = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      fetch(\"http://localhost/api/jwt-login\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (content) {\n        // 아이디와 비밀번호가 올바른지 확인하고, 맞으면 이메일 인증 여부 확인\n        if (content.hasOwnProperty('error')) {\n          if (content.hasOwnProperty('email')) {\n            isMailAuthenticated = false;\n          } else throw Error(content['error']);\n        }\n\n        console.log(\"content ? \", content);\n\n        _this3.props.userStateChange(true, isMailAuthenticated, _this3.state.username, content.email);\n\n        _this3.props.history.push('/');\n      }).catch(function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log('login render.');\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"You are not signed in. Click here to sign in.\"), React.createElement(\"button\", {\n        id: \"loginButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Login with Google\"))), React.createElement(LoginForm, {\n        username: this.state.username,\n        password: this.state.password,\n        changeUsername: function changeUsername(e) {\n          return _this4.valChangeControl(e);\n        },\n        changePassword: function changePassword(e) {\n          return _this4.valChangeControl(e);\n        },\n        normalLogin: function normalLogin(e) {\n          return _this4.normalLogin(e);\n        },\n        googleLogin: function googleLogin(e) {\n          return _this4.googleLogin(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/home/hong/PRTest/capstone-project/React/src/containers/Login.js"],"names":["React","Component","Fragment","LoginForm","GoogleLogin","gapi","Login","props","responseGoogle","response","console","log","state","username","password","window","load","auth2","init","client_id","opts","width","height","onSuccess","bind","signin2","render","isLogin","history","push","e","target_id","target","id","target_val","value","setState","preventDefault","isMailAuthenticated","data","fetch","method","headers","credentials","body","JSON","stringify","then","res","json","content","hasOwnProperty","Error","userStateChange","email","catch","error","alert","valChangeControl","normalLogin","googleLogin"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\";\nimport GoogleLogin from 'react-google-login';\nimport { gapi } from 'gapi-script';\n//로그인\nexport default class Login extends Component { //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    console.log(\"로그인 시작.\");\n  }\n\n  //유저 로그인 상태 체크\n  componentDidMount() {\n    window.gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init({\n        client_id: '34311588244-1m2ifu48kbs1pf9e9orb1513h8fs40bt.apps.googleusercontent.com',\n      })\n\n      window.gapi.load('signin2', function() {\n        // render a sign in button\n        // using this method will show Signed In if the user is already signed in\n        var opts = {\n          width: 200,\n          height: 50,\n          onSuccess: this.onSuccess.bind(this),\n        }\n        gapi.signin2.render('loginButton', opts)\n      })\n    })\n\n    if (this.props.isLogin) {\n      this.props.history.push(\"/\");\n    }\n  }\n  \n  valChangeControl(e){\n    let target_id=e.target.id;\n    let target_val=e.target.value;\n    console.log(\"changeControl!\");\n    this.setState({\n      [target_id]: target_val\n    });\n  }\n\n  //구글 로그인 구현하기\n  googleLogin(e){\n    this.props.history.push('/signup');\n  }\n\n  // 일반 로그인\n  normalLogin(e) {\n    e.preventDefault();\n\n    let isMailAuthenticated=true;\n    let data={\n      username: this.state.username,\n      password: this.state.password\n    }\n\n    fetch(\"http://localhost/api/jwt-login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify(data)\n    })\n    .then(res=>res.json())\n    .then(content => {\n      // 아이디와 비밀번호가 올바른지 확인하고, 맞으면 이메일 인증 여부 확인\n      if(content.hasOwnProperty('error')){\n        if(content.hasOwnProperty('email')){\n           isMailAuthenticated=false;\n        }\n        else\n           throw Error(content['error']);\n      }\n\n      console.log(\"content ? \", content);\n      this.props.userStateChange(true, isMailAuthenticated, this.state.username, content.email);\n      this.props.history.push('/');\n    }).catch(error=>alert(error));\n  }\n\n  responseGoogle = (response) => {\n    console.log(\"sdijgoew\");\n  }\n\n  render() {\n    console.log('login render.');\n    return (\n      <Fragment>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            \n            <p>You are not signed in. Click here to sign in.</p>\n            <button id=\"loginButton\">Login with Google</button>\n          </header>\n        </div>\n        <LoginForm\n            username={this.state.username}\n            password={this.state.password}\n            changeUsername={e => this.valChangeControl(e)}\n            changePassword={e => this.valChangeControl(e)}\n            normalLogin={e => this.normalLogin(e)}\n            googleLogin={e => this.googleLogin(e)}\n\n        />\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}