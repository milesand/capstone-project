{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungs\\\\Deact\\\\frontend\\\\frontend\\\\src\\\\components\\\\todos\\\\TodoList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; // import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Modal from \"./TodoModal\";\nimport \"./TodoList.css\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios.get(\"http://localhost:8000/todo/\", {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => this.setState({\n        todoList: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-5 tab-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.displayCompleted(true),\n        className: this.state.viewCompleted ? \"active\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, \"complete\"), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.displayCompleted(false),\n        className: this.state.viewCompleted ? \"\" : \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, \"Incomplete\"));\n    };\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state;\n      const newItems = this.state.todoList.filter(item => item.completed === viewCompleted);\n      return newItems.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"row-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: `todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`,\n        title: item.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, item.title))), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"row-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: `todo-description mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`,\n        title: item.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"todo-action mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.editItem(item),\n        className: \"btn btn-default mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, \" \", \"Edit\", \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.handleDelete(item),\n        className: \"btn btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, \"Delete\", \" \")))));\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n\n      if (item.id) {\n        axios.put(`http://localhost:8000/todo/${item.id}/`, item, {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('token')}`\n          }\n        }).then(res => this.refreshList());\n        return;\n      }\n\n      axios.post(\"http://localhost:8000/todo/\", item, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => this.refreshList());\n    };\n\n    this.handleDelete = item => {\n      axios.delete(`http://localhost:8000/todo/${item.id}`, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => this.refreshList());\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: \"\",\n        description: \"\",\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.editItem = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-white text-uppercase text-center my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, \"Todo List\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-7 col-md-8 col-sm-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createItem,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, \"Add task\")), this.renderTabList(), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, this.renderItems())))), this.state.modal ? /*#__PURE__*/React.createElement(Modal, {\n      activeItem: this.state.activeItem,\n      toggle: this.toggle,\n      onSave: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/sungs/Deact/frontend/frontend/src/components/todos/TodoList.js"],"names":["React","Component","axios","Modal","TodoList","constructor","props","refreshList","get","headers","Authorization","localStorage","getItem","then","res","setState","todoList","data","catch","err","console","log","displayCompleted","status","viewCompleted","renderTabList","state","renderItems","newItems","filter","item","completed","map","id","description","title","editItem","handleDelete","toggle","modal","handleSubmit","put","post","delete","createItem","activeItem","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from \"./TodoModal\";\nimport \"./TodoList.css\"\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  refreshList = () => {\n    axios\n      .get(\"http://localhost:8000/todo/\", {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        },\n      })\n      .then(res => this.setState({ todoList: res.data }))\n      .catch(err => console.log(err));\n  };\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n  renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={() => this.displayCompleted(true)}\n          className={this.state.viewCompleted ? \"active\" : \"\"}\n        >\n          complete\n        </span>\n        <span\n          onClick={() => this.displayCompleted(false)}\n          className={this.state.viewCompleted ? \"\" : \"active\"}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      item => item.completed === viewCompleted\n    );\n    return newItems.map(item => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <ul\n          className='row-1'\n        >\n          <span\n            className={`todo-title mr-2 ${\n              this.state.viewCompleted ? \"completed-todo\" : \"\"\n            }`}\n            title={item.description}\n          >\n            <h4>{item.title}</h4>\n          </span>\n        </ul>\n\n        <ul\n          className='row-2'\n        >\n          <span\n            className={`todo-description mr-2 ${\n              this.state.viewCompleted ? \"completed-todo\" : \"\"\n            }`}\n            title={item.description}\n          >\n            {item.description}\n          </span>\n\n          <span\n            className='todo-action mr-2'\n          >\n            <button\n              onClick={() => this.editItem(item)}\n              className=\"btn btn-default mr-2\"\n            >\n              {\" \"}\n              Edit{\" \"}\n            </button>\n            <button\n              onClick={() => this.handleDelete(item)}\n              className=\"btn btn-danger\"\n            >\n              Delete{\" \"}\n            </button>\n          </span>\n\n\n\n\n        </ul>\n        \n      </li>\n    ));\n  };\n  toggle = () => {\n    \n    this.setState({ modal: !this.state.modal });\n    \n  };\n  handleSubmit = item => {\n    this.toggle();\n    if (item.id) {\n      axios\n        .put(`http://localhost:8000/todo/${item.id}/`, item, {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('token')}`\n          },\n        })\n        .then(res => this.refreshList());\n      return;\n    }\n    axios\n      .post(\"http://localhost:8000/todo/\", item, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        },\n      })\n      .then(res => this.refreshList());\n  };\n  handleDelete = item => {\n    axios\n      .delete(`http://localhost:8000/todo/${item.id}`, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        },\n      })\n      .then(res => this.refreshList());\n  };\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  editItem = item => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  render() {\n    return (\n      <main className=\"content\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo List</h1>\n        <div className=\"row \">\n          <div className=\"col-lg-7 col-md-8 col-sm-10\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button onClick={this.createItem} className=\"btn btn-primary\">\n                  Add task\n                </button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {this.state.modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          />\n        ) : null}\n      </main>\n    );\n  }\n}\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}