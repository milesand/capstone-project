{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.load = load;\nexports.loadAll = loadAll;\nexports.select = select;\nexports.save = save;\nexports.remove = remove;\nexports.setRawCookie = setRawCookie;\nexports.plugToRequest = plugToRequest;\n\nvar _cookie = require('cookie');\n\nvar _cookie2 = _interopRequireDefault(_cookie);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar IS_NODE = typeof document === 'undefined' || typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test';\nvar _rawCookie = {};\n\nvar _res = void 0;\n\nfunction _isResWritable() {\n  return _res && !_res.headersSent;\n}\n\nfunction load(name, doNotParse) {\n  var cookies = IS_NODE ? _rawCookie : _cookie2.default.parse(document.cookie);\n  var cookieVal = cookies && cookies[name];\n\n  if (typeof doNotParse === 'undefined') {\n    doNotParse = !cookieVal || cookieVal[0] !== '{' && cookieVal[0] !== '[';\n  }\n\n  if (!doNotParse) {\n    try {\n      cookieVal = JSON.parse(cookieVal);\n    } catch (err) {// Not serialized object\n    }\n  }\n\n  return cookieVal;\n}\n\nfunction loadAll(doNotParse) {\n  var cookies = IS_NODE ? _rawCookie : _cookie2.default.parse(document.cookie);\n  var cookieVal = cookies;\n\n  if (typeof doNotParse === 'undefined') {\n    doNotParse = !cookieVal || cookieVal[0] !== '{' && cookieVal[0] !== '[';\n  }\n\n  if (!doNotParse) {\n    try {\n      cookieVal = JSON.parse(cookieVal);\n    } catch (err) {// Not serialized object\n    }\n  }\n\n  return cookieVal;\n}\n\nfunction select(regex) {\n  var cookies = IS_NODE ? _rawCookie : _cookie2.default.parse(document.cookie);\n\n  if (!cookies) {\n    return {};\n  }\n\n  if (!regex) {\n    return cookies;\n  }\n\n  return Object.keys(cookies).reduce(function (accumulator, name) {\n    if (!regex.test(name)) {\n      return accumulator;\n    }\n\n    var newCookie = {};\n    newCookie[name] = cookies[name];\n    return (0, _objectAssign2.default)({}, accumulator, newCookie);\n  }, {});\n}\n\nfunction save(name, val, opt) {\n  _rawCookie[name] = val; // Allow you to work with cookies as objects.\n\n  if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n    _rawCookie[name] = JSON.stringify(val);\n  } // Cookies only work in the browser\n\n\n  if (!IS_NODE) {\n    document.cookie = _cookie2.default.serialize(name, _rawCookie[name], opt);\n  }\n\n  if (_isResWritable() && _res.cookie) {\n    _res.cookie(name, val, opt);\n  }\n}\n\nfunction remove(name, opt) {\n  delete _rawCookie[name];\n\n  if (typeof opt === 'undefined') {\n    opt = {};\n  } else if (typeof opt === 'string') {\n    // Will be deprecated in future versions\n    opt = {\n      path: opt\n    };\n  } else {\n    // Prevent mutation of opt below\n    opt = (0, _objectAssign2.default)({}, opt);\n  }\n\n  if (typeof document !== 'undefined') {\n    opt.expires = new Date(1970, 1, 1, 0, 0, 1);\n    opt.maxAge = 0;\n    document.cookie = _cookie2.default.serialize(name, '', opt);\n  }\n\n  if (_isResWritable() && _res.clearCookie) {\n    _res.clearCookie(name, opt);\n  }\n}\n\nfunction setRawCookie(rawCookie) {\n  if (rawCookie) {\n    _rawCookie = _cookie2.default.parse(rawCookie);\n  } else {\n    _rawCookie = {};\n  }\n}\n\nfunction plugToRequest(req, res) {\n  if (req.cookie) {\n    _rawCookie = req.cookie;\n  } else if (req.cookies) {\n    _rawCookie = req.cookies;\n  } else if (req.headers && req.headers.cookie) {\n    setRawCookie(req.headers.cookie);\n  } else {\n    _rawCookie = {};\n  }\n\n  _res = res;\n  return function unplug() {\n    _res = null;\n    _rawCookie = {};\n  };\n}\n\nexports.default = {\n  setRawCookie: setRawCookie,\n  load: load,\n  loadAll: loadAll,\n  select: select,\n  save: save,\n  remove: remove,\n  plugToRequest: plugToRequest\n};","map":null,"metadata":{},"sourceType":"script"}