{"ast":null,"code":"import _defineProperty from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hong/PRTest/capstone-project/React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hong/PRTest/capstone-project/React/src/containers/Login.js\";\nimport React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\"; //로그인\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.facebookLogin = function (response) {\n      console.log(\"facebook profile : \", response);\n      var data = {\n        access_token: response.token,\n        social_auth: \"facebook\"\n      };\n\n      var errorCheck = function errorCheck(response) {\n        console.log(\"error check.\");\n      };\n\n      fetch(\"http://localhost/api/social-login\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return res.json();\n      }).then(errorCheck).then(function (content) {\n        console.log('facebook content : ', content);\n      }).catch(function (e) {\n        return alert(e);\n      });\n    };\n\n    console.log('login props : ', props);\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      isLoading: false\n    };\n    console.log(\"로그인 시작.\");\n    return _this;\n  } //유저 로그인 상태 체크\n\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.isLogin) {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"valChangeControl\",\n    value: function valChangeControl(e) {\n      var target_id = e.target.id;\n      var target_val = e.target.value;\n      this.setState(_defineProperty({}, target_id, target_val));\n    } //구글 로그인 구현하기\n\n  }, {\n    key: \"googleLogin\",\n    value: function googleLogin() {\n      var _this2 = this;\n\n      var auth2 = window.gapi.auth2.getAuthInstance();\n      Promise.resolve(auth2.signIn()).then(function (googleUser) {\n        console.log(\"googleUser : \", googleUser);\n        console.log(\"near login : \", _this2.props);\n        console.log(\"google login called!!!!!\", _this2.props.username);\n        var token = googleUser.getAuthResponse(true).access_token;\n        console.log(\"token : \", token);\n        var data = {\n          access_token: token,\n          social_auth: \"google\"\n        };\n\n        var errorCheck = function errorCheck(response) {\n          if (response.hasOwnProperty('error')) {\n            throw Error(response['error']);\n          }\n\n          return response;\n        };\n\n        console.log(\"here, props : \", _this2.props);\n\n        if (token != null) {\n          fetch(\"http://localhost/api/social-login\", {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify(data)\n          }).then(function (res) {\n            return res.json();\n          }).then(errorCheck).then(function (content) {\n            _this2.props.userStateChange(true, true, content.username, content.email);\n\n            _this2.props.history.push('/');\n          }).catch(function (e) {\n            return alert(e);\n          });\n        }\n      });\n    } //페이스북 로그인\n\n  }, {\n    key: \"normalLogin\",\n\n    /*googleLogin(googleUser){\n      console.log(\"near login : \", this.props);\n      if(this.props.username==\"\"){\n        console.log(\"google login called!!!!!\", this.props.username);\n        let token=googleUser.getAuthResponse().access_token;\n        console.log(token);\n         let data={\n          access_token: token,\n          social_auth: \"google\"\n        }\n         let errorCheck= response =>{\n          if(response.hasOwnProperty('error')){\n            throw Error(response['error'])\n          }\n          return response;\n        }\n        console.log(\"here, props : \", this.props);\n        if(token!=null){\n          fetch(\"http://localhost/api/google\", {\n            method: \"POST\",\n            headers: {\n              'Content-Type' : 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify(data)\n          })\n          .then(res=>res.json())\n          .then(errorCheck)\n          .then(content => {\n            console.log('prop logout : ', this.props.isLogout);\n            this.props.userStateChange(true, true, content.username, content.email);\n            this.props.history.push('/');\n          }).catch(e=>alert(e))\n        }\n      }\n    }*/\n    // 일반 로그인\n    value: function normalLogin(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var isMailAuthenticated = true;\n      var data = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      this.props.toggleLoadingState();\n      console.log(\"isLoading : \", this.state.isLoading);\n      fetch(\"http://localhost/api/jwt-login\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (content) {\n        // 아이디와 비밀번호가 올바른지 확인하고, 맞으면 이메일 인증 여부 확인\n        if (content.hasOwnProperty('error')) {\n          if (content.hasOwnProperty('email')) {\n            isMailAuthenticated = false;\n          } else throw Error(content['error']);\n        }\n\n        console.log(\"content ? \", content);\n\n        _this3.props.userStateChange(true, isMailAuthenticated, _this3.state.username, content.email);\n\n        console.log(\"joigwegjoiwegwgweg\");\n\n        _this3.setState({\n          isLoading: true\n        });\n\n        _this3.props.toggleLoadingState();\n\n        _this3.props.history.push('/');\n      }).catch(function (error) {\n        alert(error);\n\n        _this3.props.toggleLoadingState();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        username: this.state.username,\n        password: this.state.password,\n        isLoading: this.props.isLoading,\n        isLogin: this.isLogin,\n        changeUsername: function changeUsername(e) {\n          return _this4.valChangeControl(e);\n        },\n        changePassword: function changePassword(e) {\n          return _this4.valChangeControl(e);\n        },\n        normalLogin: function normalLogin(e) {\n          return _this4.normalLogin(e);\n        },\n        googleLogin: function googleLogin(e) {\n          return _this4.googleLogin(e);\n        },\n        facebookLogin: function facebookLogin(e) {\n          return _this4.facebookLogin(e);\n        },\n        test: function test(e) {\n          return _this4.test(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/home/hong/PRTest/capstone-project/React/src/containers/Login.js"],"names":["React","Component","Fragment","LoginForm","Login","props","facebookLogin","response","console","log","data","access_token","token","social_auth","errorCheck","fetch","method","headers","credentials","body","JSON","stringify","then","res","json","content","catch","e","alert","state","username","password","isLoading","isLogin","history","push","target_id","target","id","target_val","value","setState","auth2","window","gapi","getAuthInstance","Promise","resolve","signIn","googleUser","getAuthResponse","hasOwnProperty","Error","userStateChange","email","preventDefault","isMailAuthenticated","toggleLoadingState","error","valChangeControl","normalLogin","googleLogin","test"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport LoginForm from \"../components/LoginComponents/LoginForm\";\n\n//로그인\nexport default class Login extends Component { //export default : 다른 모듈에서 이 모듈을 import할 때 내보낼 대표 값\n  constructor(props) {\n    super(props);\n    console.log('login props : ', props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isLoading: false\n    };\n    console.log(\"로그인 시작.\");\n  }\n\n  //유저 로그인 상태 체크\n  componentDidMount() {\n    if (this.props.isLogin) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  valChangeControl(e){\n    let target_id=e.target.id;\n    let target_val=e.target.value;\n    this.setState({\n      [target_id]: target_val\n    });\n  }\n\n  //구글 로그인 구현하기\n\n  googleLogin(){\n    let auth2=window.gapi.auth2.getAuthInstance();\n    Promise.resolve(auth2.signIn())\n    .then(googleUser => {\n      console.log(\"googleUser : \", googleUser);\n      console.log(\"near login : \", this.props);\n      console.log(\"google login called!!!!!\", this.props.username);\n      let token=googleUser.getAuthResponse(true).access_token;\n      console.log(\"token : \", token);\n\n      let data={\n        access_token: token,\n        social_auth: \"google\"\n      }\n\n      let errorCheck= response =>{\n        if(response.hasOwnProperty('error')){\n          throw Error(response['error'])\n        }\n        return response;\n      }\n      console.log(\"here, props : \", this.props);\n      if(token!=null){\n        fetch(\"http://localhost/api/social-login\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type' : 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify(data)\n        })\n        .then(res=>res.json())\n        .then(errorCheck)\n        .then(content => {\n          this.props.userStateChange(true, true, content.username, content.email);\n          this.props.history.push('/');\n        }).catch(e=>alert(e))\n      }\n    })\n  }\n\n  //페이스북 로그인\n  facebookLogin = (response) => {\n    console.log(\"facebook profile : \", response);\n    let data={\n      access_token: response.token,\n      social_auth: \"facebook\"\n    }\n\n    let errorCheck = (response) =>{\n      console.log(\"error check.\");\n    }\n\n    fetch(\"http://localhost/api/social-login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify(data)\n    })\n    .then(res=>res.json())\n    .then(errorCheck)\n    .then(content => {\n      console.log('facebook content : ', content);\n    }).catch(e=>alert(e))\n  }\n\n  /*googleLogin(googleUser){\n    console.log(\"near login : \", this.props);\n    if(this.props.username==\"\"){\n      console.log(\"google login called!!!!!\", this.props.username);\n      let token=googleUser.getAuthResponse().access_token;\n      console.log(token);\n\n      let data={\n        access_token: token,\n        social_auth: \"google\"\n      }\n\n      let errorCheck= response =>{\n        if(response.hasOwnProperty('error')){\n          throw Error(response['error'])\n        }\n        return response;\n      }\n      console.log(\"here, props : \", this.props);\n      if(token!=null){\n        fetch(\"http://localhost/api/google\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type' : 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify(data)\n        })\n        .then(res=>res.json())\n        .then(errorCheck)\n        .then(content => {\n          console.log('prop logout : ', this.props.isLogout);\n          this.props.userStateChange(true, true, content.username, content.email);\n          this.props.history.push('/');\n        }).catch(e=>alert(e))\n      }\n    }\n  }*/\n\n  // 일반 로그인\n  normalLogin(e) {\n    e.preventDefault();\n    let isMailAuthenticated=true;\n    let data={\n      username: this.state.username,\n      password: this.state.password\n    }\n    \n    this.props.toggleLoadingState();\n    console.log(\"isLoading : \", this.state.isLoading);\n    fetch(\"http://localhost/api/jwt-login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify(data)\n    })\n    .then(res=>res.json())\n    .then(content => {\n      // 아이디와 비밀번호가 올바른지 확인하고, 맞으면 이메일 인증 여부 확인\n      if(content.hasOwnProperty('error')){\n        if(content.hasOwnProperty('email')){\n           isMailAuthenticated=false;\n        }\n        else\n           throw Error(content['error']);\n      }\n\n      console.log(\"content ? \", content);\n      this.props.userStateChange(true, isMailAuthenticated, this.state.username, content.email);\n      console.log(\"joigwegjoiwegwgweg\");\n      this.setState({\n        isLoading: true\n      });\n      this.props.toggleLoadingState();\n      this.props.history.push('/');\n    }).catch(error=>{\n          alert(error);\n          this.props.toggleLoadingState();\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n            <LoginForm\n                username={this.state.username}\n                password={this.state.password}\n                isLoading={this.props.isLoading}\n                isLogin={this.isLogin}\n                changeUsername={e => this.valChangeControl(e)}\n                changePassword={e => this.valChangeControl(e)}\n                normalLogin={e => this.normalLogin(e)}\n                googleLogin={e => this.googleLogin(e)}\n                facebookLogin={e => this.facebookLogin(e)}\n                test={e=>this.test(e)}\n            />\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}