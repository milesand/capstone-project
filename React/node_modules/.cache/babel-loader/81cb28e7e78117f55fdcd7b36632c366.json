{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungs\\\\Deact\\\\frontend\\\\frontend\\\\src\\\\containers\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport TodoList from \"../components/todos/TodoList\";\nimport \"./Home.css\";\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n  }\n\n  componentDidMount() {\n    let handleErrors = response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response;\n    }; // todo api를 요청하기 위해 현재 access 토큰을 보내 타당한지 확인하고, 타탕하다면 해당 리소스 접근\n    // 타당성 확인은 서버측에서 담당\n\n\n    fetch('http://localhost:8000/todo/', {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n    }).then(handleErrors).then(res => res.json()).then(json => {\n      this.setState({\n        todos: json\n      });\n    }).catch(error => alert(error));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Hi, \", this.props.username), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lander\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      data: this.state.todos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sungs/Deact/frontend/frontend/src/containers/Home.js"],"names":["React","Component","TodoList","Home","state","todos","componentDidMount","handleErrors","response","ok","Error","statusText","fetch","headers","Authorization","localStorage","getItem","then","res","json","setState","catch","error","alert","render","props","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAO,YAAP;AAGA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CG,KAD0C,GAClC;AACNC,MAAAA,KAAK,EAAE;AADD,KADkC;AAAA;;AAK1CC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,YAAY,GAAGC,QAAQ,IAAI;AAC7B,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACD,aAAOH,QAAP;AACD,KALD,CADkB,CAQlB;AACA;;;AACAI,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,OAAMC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAD7C;AAD0B,KAAhC,CAAL,CAKCC,IALD,CAKMV,YALN,EAMCU,IAND,CAMMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANb,EAOCF,IAPD,CAOME,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZf,QAAAA,KAAK,EAAEc;AADK,OAAd;AAGD,KAXD,EAYCE,KAZD,CAYOC,KAAK,IAAIC,KAAK,CAACD,KAAD,CAZrB;AAaH;;AAECE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAS,KAAKC,KAAL,CAAWC,QAApB,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWC,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF;AAWD;;AA1CyC","sourcesContent":["import React, { Component } from \"react\";\nimport TodoList from \"../components/todos/TodoList\";\nimport \"./Home.css\";\n\n\nexport default class Home extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    let handleErrors = response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    }\n\n    // todo api를 요청하기 위해 현재 access 토큰을 보내 타당한지 확인하고, 타탕하다면 해당 리소스 접근\n    // 타당성 확인은 서버측에서 담당\n    fetch('http://localhost:8000/todo/', {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n    })\n    .then(handleErrors)\n    .then(res => res.json())\n    .then(json => {\n      this.setState({\n        todos: json\n      });\n    })\n    .catch(error => alert(error));\n}\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <h3>Hi, {this.props.username}</h3>\n        <div className=\"lander\">\n          <hr/>\n          <TodoList\n            data={this.state.todos}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}