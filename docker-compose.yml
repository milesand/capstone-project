version : '3.4'

# 윈도우에서 사용하는 docker는 virtualbox를 사용하는데, 몽고DB는 virtualbox의 shared folder를 지원하지 않는다.
# 따라서 docker에서 지원하는 Data Volume Container를 이용해야 한다.
volumes:
  socket:
    external: false

services:
  db:
    image : mongo
    container_name : "db"
    environment:
      MONGO_INITDB_DATABASE: exampledb
    volumes:
      - ./db/data:/data/db/
      - ./db/init:/docker-entrypoint-initdb.d/
    expose:
      - 27017

  django:
    build:
      context: ./app
      network: host #django pip 속도 향상
    volumes:
     - ./app:/app/
     - socket:/socket/
     - ./files:/files
    expose:
      - 8000
    depends_on:
      - db
    environment:
      USER_ID: ${USER_ID:?"Run as './udco ...'"}
      GROUP_ID: ${GROUP_ID:?"Run as './udco ...'"}
      DJANGO_SETTINGS_MODULE: capstone.settings.deploy
    #wait-for-it.sh는 db가 켜질 때까지 기다렸다가 django 앱이 켜지게 해줍니다.
    command: >
      sh -c "/wait-for-it.sh db:27017 -t 10 &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             uwsgi --uid ${USER_ID} --gid ${GROUP_ID} --ini ./uwsgi/Capstone.ini"

  nginx:
    build:
      context: ./nginx
    #restart: always 서버가 다운되었을 때 자동으로 재시작하게 해준다.
    volumes:
      - socket:/socket/
      - ./app/static:/static/
      - ./files:/media/files/ #사용자가 업로한 파일들을 저장하는 장소
      - ./React:/React/
      - ./nginx/app.conf:/etc/nginx/conf.d/app.conf #nginx 테스트용입니다. 나중에 지워주세요.
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf #nginx 테스트용입니다. 나중에 지워주세요.
    ports:
      - "80:80"
    depends_on:
      - django
    environment:
      USER_ID: ${USER_ID:?"Run as './udco ...'"}
      GROUP_ID: ${GROUP_ID:?"Run as './udco ...'"}
    command: nginx -g "daemon off;"


